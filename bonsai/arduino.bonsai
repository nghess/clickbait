<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:CreateArduino">
          <ard:PortName>COM5</ard:PortName>
          <ard:BaudRate>57600</ard:BaudRate>
          <ard:SamplingInterval>19</ard:SamplingInterval>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:CameraCapture">
          <cv:Index>0</cv:Index>
          <cv:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:ConvertToImage" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:VideoWriter">
          <cv:FileName>C:\Git Repos\place-click\video\blank.mp4</cv:FileName>
          <cv:Suffix>None</cv:Suffix>
          <cv:Buffered>true</cv:Buffered>
          <cv:Overwrite>false</cv:Overwrite>
          <cv:FourCC>FMP4</cv:FourCC>
          <cv:FrameRate>30</cv:FrameRate>
          <cv:FrameSize>
            <cv:Width>0</cv:Width>
            <cv:Height>0</cv:Height>
          </cv:FrameSize>
          <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT1S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="ipy:PythonTransform">
        <ipy:Script>@returns(bool)
def process(value):
  if value % 2 == 0:
    return True
  else: 
    return False</ipy:Script>
      </Expression>
      <Expression xsi:type="ipy:PythonTransform">
        <ipy:Script>@returns(bool)
def process(value):
  if value % 2 != 0:
    return True
  else: 
    return False</ipy:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:AnalogInput">
          <ard:PortName>COM5</ard:PortName>
          <ard:Pin>0</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="ipy:PythonTransform">
        <ipy:Script>class MovingAverage:
    def __init__(self, size=10):
        self.size = size
        self.data = []

    def add_value(self, value):
        if len(self.data) == self.size:
            self.data.pop(0)  # remove the oldest element
        self.data.append(value)
        return sum(self.data) / len(self.data)

@returns(int)
def process(value):
  ma = MovingAverage(10)  # moving average with window size of 10
  smoothed_value = ma.add_value(value)  # call this every time a new reading is obtained
  return smoothed_value
</ipy:Script>
      </Expression>
      <Expression xsi:type="ipy:PythonTransform">
        <ipy:Script>@returns(bool)
def process(value):
  if value &gt;= 1000:
    return True
  else:
    return False</ipy:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM5</ard:PortName>
          <ard:Pin>52</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM5</ard:PortName>
          <ard:Pin>22</ard:Pin>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="4" To="6" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="9" To="11" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>